(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{174:function(e,t,r){"use strict";r.r(t);var a=r(2),n=r.n(a),l=r(129),o=r(96),i=(r(504),r(92)),s=function(e){var t=e.href,r=e.text;return n.a.createElement("a",{href:t,target:"_blank",rel:"noopener noreferrer"},r||t)};t.default=function(){return n.a.createElement("div",{className:"Landing"},n.a.createElement(o.Head,null,n.a.createElement("title",null,i.a),n.a.createElement("meta",{name:"description",content:"Learn RxJS and play with Observables in online sandbox playground"})),n.a.createElement("div",{className:"PageBlock"},n.a.createElement("p",null,"Learn ",n.a.createElement(s,{href:"http://reactivex.io/rxjs/",text:"RxJS"})," before deploying to production (for great good, of cource)"),n.a.createElement("p",null,"This tool is aimed at assisting you in understanding observables by playing with them. There are some code examples prebuilt for you in the left menu. Further, you can modify any of them to see how it changes output. Once a snippet is changed -- resulting output would be recalculated IMMEDIATELY."),n.a.createElement("div",null,"NOTE: currently there are following limitations:",n.a.createElement("ul",null,n.a.createElement("li",null,"- timeline is cut to 1000ms"),n.a.createElement("li",null,"- Promises are not supported"))),n.a.createElement("br",null),n.a.createElement("p",null,"Please, check the source codes of this project at ",n.a.createElement(s,{text:"github",href:"https://github.com/observable-playground/observable-playground"}),"."),n.a.createElement("p",null,"Your feedback is welcome!"),n.a.createElement("br",null),n.a.createElement("p",null,"This tool was inspired by ",n.a.createElement(s,{href:"http://rxmarbles.com/",text:"rxmarbles.com"}),", ",n.a.createElement(s,{href:"https://www.learnrxjs.io",text:"learnrxjs.io"})," and great talks by ",n.a.createElement(s,{href:"http://worrydream.com/",text:"Bret Victor"}))),n.a.createElement("br",null),n.a.createElement(l.a,{height:"200",code:"const { rxObserver } = require('api/v0.3');\nconst { timer } = require('rxjs');\nconst { take, map } = require('rxjs/operators');\n\nconst msg = 'awesome';\n\ntimer(0, 5)\n  .pipe(\n    take(msg.length),\n    map(index=>msg[index])\n  )\n  .subscribe(rxObserver());"}))}}}]);
//# sourceMappingURL=src-pages-index.97e5433d.js.map