{"pageProps":{"library":{"name":"RxJS","version":"6.6.3","description":"Reactive Extensions For JavaScript","groups":[{"name":"My packages","items":["autorun","proxy","query"]},{"name":"Observable","items":["constructor","pipe","forEach","toPromise","subscribe"]},{"name":"Creation","items":["of","from","fromPromise","interval","timer","defer","range","iif","never","empty"]},{"name":"Filtering","items":["filter","find","first","take","takeUntil","takeWhile","auditTime","debounceTime","throttleTime","sampleTime","windowToggle"]},{"name":"Combination","items":["zip","forkJoin","race","combineLatest","withLatestFrom","startWith"]},{"name":"Error handling","items":["throwError","catch","retry","retryWhen","onErrorResumeNext"]},{"name":"Transformation","items":["map","pluck","buffer","mergeMap","switchMap","exhaustMap","concatMap","expand","toArray","windowWhen"]},{"name":"Multicasting","items":["share","shareReplay"]},{"name":"Utility","items":["tap","finalize","timeInterval","defaultIfEmpty","delay","delayWhen","dematerialize","repeat","timeout"]},{"name":"⚠️ Experimental","items":["js-pipeline"]}]},"example":{"name":"tap-vs-finalize","title":"tap vs finalize","pageTitle":"tap vs finalize — RxJS operators comparison + marble diagram","desc":"both can be used to","docsUrl":"","editUrl":"https://github.com/observable-playground/observable-playground/tree/master/src/examples/rxjs/files/tap-vs-finalize.md","content":"\n\nBoth operators can be used to trigger sideeffects on error/complete stream events. While [`tap`](/rxjs/tap/) can distinguish error from complete, [`finalize`](/rxjs/finalize/) will also be triggered on unsubscription:\n\n> Open browser console to see the output\n\n```js\nconst { rxObserver } = require('api/v0.3');\nconst { timer } = require('rxjs');\nconst { finalize, tap } = require('rxjs/operators');\n\n// you'll need to open console\n// for this example\n\nconst sub = timer(10)\n  .pipe(\n    finalize(()=>\n      console.log(`Finished @ ${ Date.now() }ms`)\n    ),\n    tap({\n      next(n){ console.log(n) },\n      error(e){ console.log(e) },\n      complete(){ console.log('C') }\n    })\n  )\n  .subscribe(rxObserver());\n\n\n// uncomment next line to trigger only finalize\n// setTimeout(() => sub.unsubscribe(), 5)\n\n```\n"}},"__N_SSG":true}