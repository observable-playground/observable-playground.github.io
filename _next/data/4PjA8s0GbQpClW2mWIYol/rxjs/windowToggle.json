{"pageProps":{"library":{"name":"RxJS","version":"6.6.3","description":"Reactive Extensions For JavaScript","groups":[{"name":"My packages","items":["autorun","proxy","query"]},{"name":"Observable","items":["constructor","pipe","forEach","toPromise","subscribe"]},{"name":"Creation","items":["of","from","fromPromise","interval","timer","defer","range","iif","never","empty"]},{"name":"Filtering","items":["filter","find","first","take","takeUntil","takeWhile","auditTime","debounceTime","throttleTime","sampleTime","windowToggle"]},{"name":"Combination","items":["zip","forkJoin","race","combineLatest","withLatestFrom","startWith"]},{"name":"Error handling","items":["throwError","catch","retry","retryWhen","onErrorResumeNext"]},{"name":"Transformation","items":["map","pluck","buffer","mergeMap","switchMap","exhaustMap","concatMap","expand","toArray","windowWhen"]},{"name":"Multicasting","items":["share","shareReplay"]},{"name":"Utility","items":["tap","finalize","timeInterval","delay","delayWhen","dematerialize","repeat","timeout"]},{"name":"⚠️ Experimental","items":["js-pipeline"]}]},"example":{"name":"windowToggle","title":"windowToggle","pageTitle":"windowToggle — RxJS operator example + marble diagram","desc":"windowToggle lets you open and close a filtering window. Emissions between \"on\" and \"off\" events will be passed to the output stream:","docsUrl":"https://rxjs.dev/api/operators/windowToggle","editUrl":"https://github.com/observable-playground/observable-playground/tree/master/src/examples/rxjs/files/windowToggle.md","content":"\n\n`windowToggle` operator lets you open and close a filtering window. Emissions between \"on\" and \"off\" events will be passed to the output stream. Read more about muting and spacing events on RxJS streams in my article **[\"Pausable Observables in RxJS and other backpressure techniques\"](https://medium.com/@kddsky/pauseable-observables-in-rxjs-58ce2b8c7dfd)**\n\n```js\nconst { rxObserver } = require('api/v0.3');\nconst { timer, merge, Subject } = require('rxjs');\nconst { windowToggle, take, flatMap, mapTo } = require('rxjs/operators');\n\n\nconst source$ = timer(0, 10).pipe(take(10));\n\nconst windowOn$ = new Subject();\nconst windowOff$ = new Subject();\n\nconst result$ = source$.pipe(\n  // filter values between on-off pairs\n  windowToggle(\n    windowOn$,\n    ()=>windowOff$\n  ),\n\n  // flattern window values\n  flatMap(v=>v)\n);\n\n// trigger ONs and OFFs\nwindowOn(15);\nwindowOff(35);\n\nwindowOn(75);\nwindowOff(85);\n\n\n// subscriptions\nsource$.subscribe(rxObserver('source$'));\nmerge(\n    windowOn$.pipe(mapTo('on')),\n    windowOff$.pipe(mapTo('off'))\n  )\n  .subscribe(rxObserver('switch'));\nresult$.subscribe(rxObserver('result$'));\n\n\n\n// helpers\nfunction windowOn(delay){\n  return setTimeout(()=>{\n    windowOn$.next(void 0);\n  }, delay);\n}\n\nfunction windowOff(delay){\n  return setTimeout(()=>{\n    windowOff$.next(void 0);\n  }, delay);\n}\n\n```\n"}},"__N_SSG":true}