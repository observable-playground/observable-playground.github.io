{"pageProps":{"library":{"name":"RxJS","version":"6.6.3","description":"Reactive Extensions For JavaScript","groups":[{"name":"My packages","items":["rxjs-autorun","rxjs-proxify","rx-rql"]},{"name":"Observable","items":["pipe","forEach","toPromise","subscribe"]},{"name":"Creation","items":["of","from","fromPromise","interval","timer","defer","range","iif","constructor"]},{"name":"Filtering","items":["filter","find","first","take","takeUntil","takeWhile","auditTime","debounceTime","throttleTime","sampleTime","windowToggle"]},{"name":"Combination","items":["zip","forkJoin","race","combineLatest","withLatestFrom","startWith"]},{"name":"Error handling","items":["throwError","catch","retry","retryWhen","onErrorResumeNext"]},{"name":"Transformation","items":["map","pluck","buffer","mergeMap","switchMap","exhaustMap","concatMap","expand","toArray","windowWhen"]},{"name":"Multicasting","items":["share","shareReplay"]},{"name":"Utility","items":["tap","finalize","timeInterval","delay","delayWhen","dematerialize","repeat","timeout"]},{"name":"⚠️ Experimental","items":["js-pipeline"]}]},"example":{"name":"delay","title":"delay","pageTitle":"delay — RxJS operator example + marble diagram","desc":"delays value emission by a given time","docsUrl":"https://rxjs.dev/api/operators/delay","editUrl":"https://github.com/observable-playground/observable-playground/tree/master/src/examples/rxjs/files/delay.md","content":"\n\n`delay` delays value emission by a given time\n\n```js\nconst { rxObserver } = require('api/v0.3');\nconst { timer } = require('rxjs');\nconst { delay, take } = require('rxjs/operators');\n\n// basic timer\nconst timer$ = timer(0, 10)\n  .pipe(\n    take(5)\n  );\n\n// same timer, values delayed by 15ms\nconst delayed$ = timer$.pipe(\n    delay(15)\n  );\n\ntimer$.subscribe(rxObserver('Basic timer'));\ndelayed$.subscribe(rxObserver('Delayed by 15ms'));\n\n```\n\nTo make more sophisticated per value delay — see [`delayWhen` operator example](/rxjs/delayWhen/)"}},"__N_SSG":true}