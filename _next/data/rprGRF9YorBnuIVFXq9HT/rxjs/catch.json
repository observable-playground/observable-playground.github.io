{"pageProps":{"library":{"name":"RxJS","version":"6.6.3","description":"Reactive Extensions For JavaScript","groups":[{"name":"My packages","items":["autorun","proxy","query"]},{"name":"Observable","items":["constructor","pipe","forEach","toPromise","subscribe"]},{"name":"Creation","items":["of","from","fromPromise","interval","timer","defer","range","iif","never","empty"]},{"name":"Filtering","items":["filter","find","first","take","takeUntil","takeWhile","auditTime","debounceTime","throttleTime","sampleTime","windowToggle"]},{"name":"Combination","items":["zip","forkJoin","race","combineLatest","withLatestFrom","startWith"]},{"name":"Error handling","items":["throwError","catch","retry","retryWhen","onErrorResumeNext"]},{"name":"Transformation","items":["map","pluck","buffer","mergeMap","switchMap","exhaustMap","concatMap","expand","toArray","windowWhen"]},{"name":"Multicasting","items":["share","shareReplay"]},{"name":"Utility","items":["tap","finalize","timeInterval","defaultIfEmpty","delay","delayWhen","dematerialize","repeat","timeout"]},{"name":"⚠️ Experimental","items":["js-pipeline"]}]},"example":{"name":"catch","title":"catchError","pageTitle":"catchError — RxJS operator example + marble diagram","desc":"catchError lets you substitute an error on a stream with another stream:","docsUrl":"https://rxjs.dev/api/operators/catchError","editUrl":"https://github.com/observable-playground/observable-playground/tree/master/src/examples/rxjs/files/catch.md","content":"\n\ncatchError lets you substitute an error on a stream with another stream\n\n```js\nconst { rxObserver } = require('api/v0.3');\nconst { timer, throwError, of } = require('rxjs');\nconst { switchMap, catchError } = require('rxjs/operators');\n\n// emit an error in 5ms\nconst error$ = timer(5).pipe(\n    switchMap(() => throwError('oh'))\n  );\n\n\nconst catch$ = error$.pipe(\n    catchError(err => of(err))\n  );\n\n\nerror$.subscribe(rxObserver());\ncatch$.subscribe(rxObserver());\n\n```\n\nCheck out [\"Error handling in RxJS\"](https://medium.com/@kddsky/error-handling-in-rxjs-bac0f96a7def) article to get better understanding how not to fail with Observables.\n"}},"__N_SSG":true}