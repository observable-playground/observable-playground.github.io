{"pageProps":{"library":{"name":"RxJS","version":"6.6.0","description":"Reactive Extensions For JavaScript","groups":[{"name":"Observable","items":["pipe","forEach","toPromise","subscribe"]},{"name":"Creation","items":["of","from","fromPromise","interval","timer","defer","range","iif","constructor"]},{"name":"Filtering","items":["filter","find","first","take","takeUntil","takeWhile","auditTime","debounceTime","throttleTime","sampleTime","windowToggle"]},{"name":"Combination","items":["zip","forkJoin","race","combineLatest","withLatestFrom","startWith"]},{"name":"Error handling","items":["throwError","catch","retry","retryWhen","onErrorResumeNext"]},{"name":"Transformation","items":["map","pluck","buffer","mergeMap","switchMap","exhaustMap","concatMap","expand","toArray","windowWhen"]},{"name":"Multicasting","items":["share","shareReplay"]},{"name":"Utility","items":["tap","finalize","timeInterval","delay","delayWhen","dematerialize","repeat","timeout"]},{"name":"⚠️ Experimental","items":["js-pipeline"]}]},"example":{"name":"range","title":"range","pageTitle":"range — RxJS function example + marble diagram","desc":"Example of how to generate sequence of numbers using RxJS range","docsUrl":"https://rxjs.dev/api/index/function/range","editUrl":"https://github.com/observable-playground/observable-playground/tree/master/src/examples/rxjs/files/range.md","content":"\n\nWill immediately emit a sequence of numbers within a specified range\n\n```js\nconst { rxObserver } = require('api/v0.3');\nconst { range } = require('rxjs');\n\nrange(0, 3)\n  .subscribe(rxObserver());\n\n```\n\nTo make a pause between emissions see [timer](/rxjs/timer/) and [interval](/rxjs/interval/) functions"}},"__N_SSG":true}