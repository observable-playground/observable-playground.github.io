{"pageProps":{"library":{"name":"RxJS","version":"6.6.0","description":"Reactive Extensions For JavaScript","groups":[{"name":"Observable","items":["pipe","forEach","toPromise","subscribe"]},{"name":"Creation","items":["of","from","fromPromise","interval","timer","defer","range","iif","constructor"]},{"name":"Filtering","items":["filter","find","first","auditTime","debounceTime","throttleTime","sampleTime","windowToggle"]},{"name":"Combination","items":["zip","forkJoin","race","combineLatest","withLatestFrom","startWith"]},{"name":"Error handling","items":["throwError","catch","retry","retryWhen","onErrorResumeNext"]},{"name":"Transformation","items":["map","pluck","buffer","mergeMap","switchMap","exhaustMap","concatMap","expand","toArray","windowWhen"]},{"name":"Multicasting","items":["share","shareReplay"]},{"name":"Utility","items":["tap","finalize","timeInterval","delay","delayWhen","dematerialize","repeat","timeout"]}]},"example":{"name":"retryWhen","title":"retryWhen","pageTitle":"retryWhen â€” RxJS operator example + marble diagram","desc":"retryWhen let's you do basic retry with strategy, based on error emissions","docsUrl":"https://rxjs.dev/api/operators/retryWhen","editUrl":"https://github.com/observable-playground/observable-playground/tree/master/src/examples/rxjs/files/retryWhen.md","content":"\n\nretryWhen let's you do basic [`retry`](/rxjs/retry/) with strategy, based on error emissions:\n\n```js\nconst {rxObserver} = require('api/v0.3');\nconst { timer } = require('rxjs');\nconst { map, tap, retryWhen, delayWhen } = require('rxjs/operators');\n\nconst source$ =\n  timer(0, 100).pipe(\n    map(val => {\n      if (val == 1) {\n        throw 'Err';\n      }\n      return val;\n    })\n  );\n\nconst result$ = source$.pipe(\n    retryWhen(errors =>\n      // here Errors are just events\n      errors.pipe(\n        // show error messages thread\n        tap(rxObserver('Error messages')),\n        // will restart with increasing delay\n        delayWhen((_, index) => timer(index * 50))\n      )\n    )\n);\n\nsource$.subscribe(rxObserver('source$'));\nresult$.subscribe(rxObserver('result$'));\n\n// a modification of\n// https://www.learnrxjs.io/operators/error_handling/retrywhen.html\n\n```\n\nCheck out [\"Error handling in RxJS\"](https://medium.com/@kddsky/error-handling-in-rxjs-bac0f96a7def) article to get better understanding how not to fail with Observables."}},"__N_SSG":true}