{"pageProps":{"library":{"name":"RxJS","version":"6.6.7","description":"Reactive Extensions For JavaScript","groups":[{"name":"My packages","items":["autorun","proxy","query"]},{"name":"Observable","items":["constructor","pipe","forEach","toPromise","subscribe"]},{"name":"Creation","items":["of","from","fromPromise","interval","timer","defer","range","iif","never","empty"]},{"name":"Filtering","items":["filter","find","first","take","single","takeUntil","takeWhile","auditTime","debounceTime","throttleTime","sampleTime","windowToggle"]},{"name":"Combination","items":["zip","forkJoin","race","combineLatest","withLatestFrom","startWith"]},{"name":"Error handling","items":["throwError","catch","retry","retryWhen","onErrorResumeNext"]},{"name":"Transformation","items":["map","pluck","buffer","mergeMap","switchMap","exhaustMap","concatMap","expand","toArray","windowWhen"]},{"name":"Multicasting","items":["share","shareReplay"]},{"name":"Utility","items":["tap","finalize","timeInterval","defaultIfEmpty","delay","delayWhen","dematerialize","repeat","timeout"]}]},"example":{"name":"from","title":"from","pageTitle":"from â€” RxJS function example + marble diagram","desc":"See this example of \"from\" turning iterable string and an array into an Observable","docsUrl":"https://rxjs.dev/api/index/function/from","editUrl":"https://github.com/observable-playground/observable-playground/tree/master/src/examples/rxjs/files/from.md","content":"\n\nFunction `from` will turn an `iterable`, `Promise`, or `Observable-like` value into an Observable. Examples using `iterable`:\n\n## A stream from an Array\n\n```js\nconst { rxObserver } = require('api/v0.3');\nconst { from } = require('rxjs');\n\nfrom([ 5, 10, 20 ])\n  .subscribe(rxObserver('from([5, 10, 20])'));\n\n```\n\n## A stream from a String\n\n```js\nconst { rxObserver } = require('api/v0.3');\nconst { from } = require('rxjs');\n\nfrom('Hello')\n  .subscribe(rxObserver(`from('Hello')`));\n\n```\n\nFor promise conversion example see [`fromPromise`](/rxjs/fromPromise/) "}},"__N_SSG":true}