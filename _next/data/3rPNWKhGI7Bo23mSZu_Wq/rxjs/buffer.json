{"pageProps":{"library":{"name":"RxJS","version":"6.6.7","description":"Reactive Extensions For JavaScript","groups":[{"name":"My packages","items":["autorun","proxy","query"]},{"name":"Observable","items":["constructor","pipe","forEach","toPromise","subscribe"]},{"name":"Creation","items":["of","from","fromPromise","interval","timer","defer","range","iif","never","empty"]},{"name":"Filtering","items":["filter","find","first","take","single","takeUntil","takeWhile","auditTime","debounceTime","throttleTime","sampleTime","windowToggle"]},{"name":"Combination","items":["zip","forkJoin","race","combineLatest","withLatestFrom","startWith"]},{"name":"Error handling","items":["throwError","catch","retry","retryWhen","onErrorResumeNext"]},{"name":"Transformation","items":["map","pluck","buffer","mergeMap","switchMap","exhaustMap","concatMap","expand","toArray","windowWhen"]},{"name":"Multicasting","items":["share","shareReplay"]},{"name":"Utility","items":["tap","finalize","timeInterval","defaultIfEmpty","delay","delayWhen","dematerialize","repeat","timeout"]}]},"example":{"name":"buffer","title":"buffer","pageTitle":"buffer â€” RxJS operator example + marble diagram","desc":"","docsUrl":"https://rxjs.dev/api/operators/buffer","editUrl":"https://github.com/observable-playground/observable-playground/tree/master/src/examples/rxjs/files/buffer.md","content":"\n\n```js\nconst { rxObserver } = require('api/v0.3');\nconst { merge, timer } = require('rxjs');\nconst { buffer, take } = require('rxjs/operators');\n\n\nconst source$ = merge(timer(0, 200), timer(300));\n\nconst trigger$ = timer(0, 250);\n\nconst buffered$ = source$.pipe(\n    buffer(trigger$)\n  ); \n\nsource$.subscribe(rxObserver('source$'));\ntrigger$.subscribe(rxObserver('Buffer trigger$'));\nbuffered$.subscribe(rxObserver('buffered$'));\n\n```\n"}},"__N_SSG":true}