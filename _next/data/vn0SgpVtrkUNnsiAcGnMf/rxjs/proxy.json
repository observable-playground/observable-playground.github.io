{"pageProps":{"library":{"name":"RxJS","version":"6.6.3","description":"Reactive Extensions For JavaScript","groups":[{"name":"My packages","items":["autorun","proxy","query"]},{"name":"Observable","items":["constructor","pipe","forEach","toPromise","subscribe"]},{"name":"Creation","items":["of","from","fromPromise","interval","timer","defer","range","iif","never","empty"]},{"name":"Filtering","items":["filter","find","first","take","takeUntil","takeWhile","auditTime","debounceTime","throttleTime","sampleTime","windowToggle"]},{"name":"Combination","items":["zip","forkJoin","race","combineLatest","withLatestFrom","startWith"]},{"name":"Error handling","items":["throwError","catch","retry","retryWhen","onErrorResumeNext"]},{"name":"Transformation","items":["map","pluck","buffer","mergeMap","switchMap","exhaustMap","concatMap","expand","toArray","windowWhen"]},{"name":"Multicasting","items":["share","shareReplay"]},{"name":"Utility","items":["tap","finalize","timeInterval","delay","delayWhen","dematerialize","repeat","timeout"]},{"name":"‚ö†Ô∏è Experimental","items":["js-pipeline"]}]},"example":{"name":"proxy","title":"rxjs-proxify","pageTitle":"rxjs-proxify ‚Äî A smart Proxy for RxJS with good TypeScript support","desc":"RxJS-Proxify playground. A smart Proxy for RxJS with good TypeScript support","docsUrl":"","editUrl":"https://github.com/observable-playground/observable-playground/tree/master/src/examples/rxjs/files/proxy.md","content":"\n\n## üìñ About\n\nA smart Proxy for RxJS with good TypeScript support\n\n**üîó Links:**    \nSee the homepage: [github.com/kosich/rxjs-proxify](https://github.com/kosich/rxjs-proxify)    \nRead an intro article: [\"Turn a Stream of Objects into an Object of Streams\"](https://dev.to/rxjs/turn-a-stream-of-objects-into-an-object-of-streams-2aed)    \n\n**üì¶ Install:**    \n<pre><code>\nnpm i rxjs-proxify\n</code></pre>\n\n\n## üõ∏ Examples\n\n### Access properties\n\nRead property value at any depth:\n\n```js\nconst { rxObserver } = require('api/v0.3');\nconst { of } = require('rxjs');\nconst { map } = require('rxjs/operators');\nconst { proxify } = require('rxjs-proxify');\n\nconst source = of({ a: 1 }, { a: 2 }, { a: 3 });\n\nproxify(source)\n  .a // read `a` from every emission\n  .subscribe(rxObserver());\n```\n\n\n### Call methods\n\nCall methods on stream values, preserving `this` binding:\n\n```js\nconst { rxObserver } = require('api/v0.3');\nconst { timer } = require('rxjs');\nconst { proxify } = require('rxjs-proxify');\n\nconst a = timer(100);\n\nproxify(a)\n  .toString(2)\n  .subscribe(rxObserver());\n```\n\n---\n\n**üõ† Check out the docs for more: [github.com/kosich/rxjs-proxify](https://github.com/kosich/rxjs-proxify)**\n\n_This is one of my libs that I'd like to share with you_\n"}},"__N_SSG":true}