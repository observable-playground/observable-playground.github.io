{"pageProps":{"library":{"name":"RxJS","version":"6.6.0","description":"Reactive Extensions For JavaScript","groups":[{"name":"Observable","items":["pipe","forEach","toPromise","subscribe"]},{"name":"Creation","items":["of","from","fromPromise","interval","timer","defer","range","iif","constructor"]},{"name":"Filtering","items":["filter","find","first","auditTime","debounceTime","throttleTime","sampleTime","windowToggle"]},{"name":"Combination","items":["zip","forkJoin","race","combineLatest","withLatestFrom","startWith"]},{"name":"Error handling","items":["throwError","catch","retry","retryWhen","onErrorResumeNext"]},{"name":"Transformation","items":["map","pluck","buffer","mergeMap","switchMap","exhaustMap","concatMap","expand","toArray","windowWhen"]},{"name":"Multicasting","items":["share","shareReplay"]},{"name":"Utility","items":["tap","finalize","timeInterval","delay","delayWhen","dematerialize","repeat","timeout"]},{"name":"⚠️ Experimental","items":["js-pipeline"]}]},"example":{"name":"withLatestFrom","title":"withLatestFrom","pageTitle":"withLatestFrom — RxJS operator example + marble diagram","desc":"","docsUrl":"https://rxjs.dev/api/operators/withLatestFrom","editUrl":"https://github.com/observable-playground/observable-playground/tree/master/src/examples/rxjs/files/withLatestFrom.md","content":"\n\nCreates a combined stream from source and other provided streams.    \nWhen source emits a value — resulting Observable will emit a combined value of source emission and all latest values on provided streams.\n\n```js\nconst { rxObserver } = require('api/v0.3');\nconst { timer } = require('rxjs');\nconst { withLatestFrom, take } = require('rxjs/operators');\n\n\nconst a$ = timer(0, 10).pipe(\n    take(5)\n  );\n\nconst b$ = timer(0, 4).pipe(\n    take(7)\n  );\n\nconst result$ = a$.pipe(\n  withLatestFrom(b$)\n);\n\na$.subscribe(rxObserver('a$'));\nb$.subscribe(rxObserver('b$'));\nresult$.subscribe(rxObserver('a$ :: withLatestFrom(b$)'));\n\n```\n"}},"__N_SSG":true}