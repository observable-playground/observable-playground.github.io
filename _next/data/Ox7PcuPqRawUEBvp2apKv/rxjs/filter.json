{"pageProps":{"library":{"name":"RxJS","version":"6.6.7","description":"Reactive Extensions For JavaScript","groups":[{"name":"My packages","items":["autorun","proxy","query"]},{"name":"Observable","items":["constructor","pipe","forEach","toPromise","subscribe"]},{"name":"Creation","items":["of","from","fromPromise","interval","timer","defer","range","iif","never","empty"]},{"name":"Filtering","items":["filter","find","first","take","single","takeUntil","takeWhile","auditTime","debounceTime","throttleTime","sampleTime","windowToggle"]},{"name":"Combination","items":["zip","forkJoin","race","combineLatest","withLatestFrom","startWith"]},{"name":"Error handling","items":["throwError","catch","retry","retryWhen","onErrorResumeNext"]},{"name":"Transformation","items":["map","pluck","buffer","mergeMap","switchMap","exhaustMap","concatMap","expand","toArray","windowWhen"]},{"name":"Multicasting","items":["share","shareReplay"]},{"name":"Utility","items":["tap","finalize","timeInterval","defaultIfEmpty","delay","delayWhen","dematerialize","repeat","timeout"]}]},"example":{"name":"filter","title":"filter","pageTitle":"filter â€” RxJS operator example + marble diagram","desc":"Filter operator omits all values from source that don't match the predicate function","docsUrl":"https://rxjs.dev/api/operators/filter","editUrl":"https://github.com/observable-playground/observable-playground/tree/master/src/examples/rxjs/files/filter.md","content":"\n\n`filter` operator omits all values from source that don't match the predicate function\n\n```js\nconst { rxObserver } = require('api/v0.3');\nconst { timer } = require('rxjs');\nconst { filter, take } = require('rxjs/operators');\n\n\nconst source$ = timer(0, 5).pipe(\n    take(4)\n  );\n\nconst result$ = source$.pipe(\n    filter(x => x % 2)\n  );\n\nsource$.subscribe(rxObserver());\nresult$.subscribe(rxObserver());\n\n```\n"}},"__N_SSG":true}