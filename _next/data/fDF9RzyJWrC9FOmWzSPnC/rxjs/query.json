{"pageProps":{"library":{"name":"RxJS","version":"6.6.7","description":"Reactive Extensions For JavaScript","groups":[{"name":"My packages","items":["autorun","proxy","query"]},{"name":"Observable","items":["constructor","pipe","forEach","toPromise","subscribe"]},{"name":"Creation","items":["of","from","fromPromise","interval","timer","defer","range","iif","never","empty"]},{"name":"Filtering","items":["filter","find","first","take","takeUntil","takeWhile","auditTime","debounceTime","throttleTime","sampleTime","windowToggle"]},{"name":"Combination","items":["zip","forkJoin","race","combineLatest","withLatestFrom","startWith"]},{"name":"Error handling","items":["throwError","catch","retry","retryWhen","onErrorResumeNext"]},{"name":"Transformation","items":["map","pluck","buffer","mergeMap","switchMap","exhaustMap","concatMap","expand","toArray","windowWhen"]},{"name":"Multicasting","items":["share","shareReplay"]},{"name":"Utility","items":["tap","finalize","timeInterval","defaultIfEmpty","delay","delayWhen","dematerialize","repeat","timeout"]}]},"example":{"name":"query","title":"rxjs-rql","pageTitle":"Reactive Query Language â€” select events from observables","desc":"","docsUrl":"","editUrl":"https://github.com/observable-playground/observable-playground/tree/master/src/examples/rxjs/files/query.md","content":"\n\n## ðŸ“– About\n\nReactive Query Language for RxJS\n\n**ðŸ”— Links:**    \nSee the homepage: [github.com/erql/rx-rql](https://github.com/erql/rx-rql)    \nRead an intro article: [\"Queries for Observables: Crazy & Simple!\"](https://dev.to/kosich/queries-for-observables-crazy-simple-15h3)    \n\n**ðŸ“¦ Install:**    \n```\nnpm i rx-rql\n```\n\n## ðŸ›¸ Examples\n\n### Simple Query\n\nQuery events that occurred between other events\n\n```js\nconst { rxObserver } = require('api/v0.3');\nconst { timer } = require('rxjs');\nconst { mapTo } = require('rxjs/operators');\nconst { query, some, mute } = require('rx-rql');\n\nconst a = timer(200).pipe(mapTo('a'));\nconst b = timer(0, 50).pipe(mapTo('b'));\nconst c = timer(800).pipe(mapTo('c'));\n\na.subscribe(rxObserver('a'));\nb.subscribe(rxObserver('b'));\nc.subscribe(rxObserver('c'));\n\n// select all B between A and C\nquery(\n  some(mute(a), some(b), mute(c))\n)\n.subscribe(rxObserver('all B between A and C'));\n```\n\n---\n\n**ðŸ›  Check out the docs for more: [github.com/erql/rx-rql](https://github.com/erql/rx-rql)**\n\n_This is one of my libs that I'd like to share with you_\n"}},"__N_SSG":true}