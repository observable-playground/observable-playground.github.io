{"pageProps":{"library":{"name":"RxJS","version":"6.6.0","description":"Reactive Extensions For JavaScript","groups":[{"name":"Creation","items":["of","from","fromPromise","interval","timer","defer","range","iif","constructor"]},{"name":"Filtering","items":["filter","find","first","auditTime","debounceTime","throttleTime","sampleTime","windowToggle"]},{"name":"Combination","items":["zip","forkJoin","race","combineLatest","withLatestFrom","startWith"]},{"name":"Error handling","items":["throwError","catch","retry","retryWhen","onErrorResumeNext"]},{"name":"Transformation","items":["map","pluck","buffer","mergeMap","switchMap","exhaustMap","concatMap","expand","toArray","windowWhen"]},{"name":"Multicasting","items":["share","shareReplay"]},{"name":"Utility","items":["forEach","tap","finalize","timeInterval","delay","delayWhen","dematerialize","repeat","timeout","pipe"]}]},"example":{"name":"fromPromise","title":"fromPromise","pageTitle":"fromPromise â€” RxJS function example + marble diagram","desc":"Learn how to turn a Promise into an Observable using \"from\"","docsUrl":"https://rxjs.dev/api/index/function/from","editUrl":"https://github.com/observable-playground/observable-playground/tree/master/src/examples/rxjs/files/fromPromise.md","content":"\n\nFunction `from` will turn an **`iterable`**, **`Promise`**, or **`Observable-like`** value into an Observable. Example using **`Promise`**:\n\n```js\nconst { rxObserver } = require('api/v0.3');\nconst { from } = require('rxjs');\n\nconst promise = new Promise((resolve, reject)=>{\n  setTimeout(() => resolve('done'), 10);\n});\n\nfrom(promise)\n  .subscribe(rxObserver('from(promise)'));\n\n```\n\nAlso check this [`from` iterable example](/rxjs/from/)\n"}},"__N_SSG":true}