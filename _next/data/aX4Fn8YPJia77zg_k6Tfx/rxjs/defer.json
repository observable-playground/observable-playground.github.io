{"pageProps":{"library":{"name":"RxJS","version":"6.6.7","description":"Reactive Extensions For JavaScript","groups":[{"name":"My packages","items":["autorun","proxy","query"]},{"name":"Observable","items":["constructor","pipe","forEach","toPromise","subscribe"]},{"name":"Creation","items":["of","from","fromPromise","interval","timer","defer","range","iif","never","empty"]},{"name":"Filtering","items":["filter","find","first","take","single","takeUntil","takeWhile","auditTime","debounceTime","throttleTime","sampleTime","windowToggle"]},{"name":"Combination","items":["zip","forkJoin","race","combineLatest","withLatestFrom","startWith"]},{"name":"Error handling","items":["throwError","catch","retry","retryWhen","onErrorResumeNext"]},{"name":"Transformation","items":["map","pluck","buffer","mergeMap","switchMap","exhaustMap","concatMap","expand","toArray","windowWhen"]},{"name":"Multicasting","items":["share","shareReplay"]},{"name":"Utility","items":["tap","finalize","timeInterval","defaultIfEmpty","delay","delayWhen","dematerialize","repeat","timeout"]}]},"example":{"name":"defer","title":"defer","pageTitle":"defer — RxJS function example + marble diagram","desc":"Example of how to delay Observable creation till Observable is subscribed, using defer function","docsUrl":"https://rxjs.dev/api/index/function/defer","editUrl":"https://github.com/observable-playground/observable-playground/tree/master/src/examples/rxjs/files/defer.md","content":"\n\nCreate Observable at the time of subscription\n\n```js\nconst { rxObserver } = require('api/v0.3');\nconst { defer, of } = require('rxjs');\n\n// decides later what observable to return\nconst source$ = defer(()=>{\n  if (Date.now() < 3) {\n    return of('🐦');\n  }\n\n  return of('🦉');\n});\n\n// subsctibe at T0\nsource$.subscribe(rxObserver('Early bird'));\n\n// delayed subscription\nsetTimeout(()=>{\n  source$.subscribe(rxObserver('Night owl'));\n}, 5);\n\n```\n\nTo switch between two Observables see [iif function](/rxjs/iif/)  "}},"__N_SSG":true}