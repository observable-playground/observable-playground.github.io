{"pageProps":{"library":{"name":"RxJS","version":"6.6.0","description":"Reactive Extensions For JavaScript","groups":[{"name":"Creation","items":["of","from","fromPromise","interval","timer","defer","range","iif","constructor"]},{"name":"Filtering","items":["filter","find","first","auditTime","debounceTime","throttleTime","sampleTime","windowToggle"]},{"name":"Combination","items":["zip","forkJoin","race","combineLatest","withLatestFrom","startWith"]},{"name":"Error handling","items":["throwError","catch","retry","retryWhen","onErrorResumeNext"]},{"name":"Transformation","items":["map","pluck","buffer","mergeMap","switchMap","exhaustMap","concatMap","expand","toArray","windowWhen"]},{"name":"Multicasting","items":["share","shareReplay"]},{"name":"Utility","items":["forEach","tap","finalize","timeInterval","delay","delayWhen","dematerialize","repeat","timeout","pipe"]}]},"example":{"name":"zip","title":"zip","pageTitle":"zip â€” RxJS operator example + marble diagram","desc":"Creates Observable from multiple Observables. Resulting stream will emit a combined value when all input streams emit a new value","docsUrl":"https://rxjs.dev/api/index/function/zip","editUrl":"https://github.com/observable-playground/observable-playground/tree/master/src/examples/rxjs/files/zip.md","content":"\n\nCreates Observable from multiple Observables.  \nResulting stream will emit a combined value when all input streams emit a new value\n\n```js\nconst { rxObserver } = require('api/v0.3');\nconst { zip, timer, from } = require('rxjs');\nconst { take } = require('rxjs/operators');\n\n\nconst alphabet = 'abcdefghijklmnopqrstuvwxyz';\nconst alphabet$ = from(alphabet);\n\nzip(\n  timer(0, 5),\n  alphabet$,\n  (digit, letter)=>digit+letter // combinator\n)\n  .pipe(\n    take(10)\n  )\n  .subscribe(rxObserver());\n\n```"}},"__N_SSG":true}