{"pageProps":{"library":{"name":"RxJS","version":"6.6.0","description":"Reactive Extensions For JavaScript","groups":[{"name":"Creation","items":["of","from","fromPromise","interval","timer","defer","range","iif","constructor"]},{"name":"Filtering","items":["filter","find","first","auditTime","debounceTime","throttleTime","sampleTime","windowToggle"]},{"name":"Combination","items":["zip","forkJoin","race","combineLatest","withLatestFrom","startWith"]},{"name":"Error handling","items":["throwError","catch","retry","retryWhen","onErrorResumeNext"]},{"name":"Transformation","items":["map","pluck","buffer","mergeMap","switchMap","exhaustMap","concatMap","expand","toArray","windowWhen"]},{"name":"Multicasting","items":["share","shareReplay"]},{"name":"Utility","items":["forEach","tap","finalize","timeInterval","delay","delayWhen","dematerialize","repeat","timeout","pipe"]}]},"example":{"name":"finalize","title":"finalize","pageTitle":"finalize â€” RxJS operator example + marble diagram","desc":"RxJS 'finalize' operator lets you run a function upon stream termination, regardless whether it has completed or failed","docsUrl":"https://rxjs.dev/api/operators/finalize","editUrl":"https://github.com/observable-playground/observable-playground/tree/master/src/examples/rxjs/files/finalize.md","content":"\n\nBeing similar to native JS `finally`, RxJS `finalize` operator lets you run a function upon stream termination, regardless whether it has completed or failed  \n(Open browser console to see the output)\n\n```js\nconst { rxObserver } = require('api/v0.3');\nconst { timer } = require('rxjs');\nconst { finalize } = require('rxjs/operators');\n\ntimer(5)\n  .pipe(\n    finalize(()=>\n      console.log(`Finished @ ${ Date.now() }ms`)\n    )\n  )\n  .subscribe(rxObserver());\n\n```\n"}},"__N_SSG":true}