{"template":"../src/Example/Example.page.js","sharedHashesByProp":{},"data":{"libraryName":"RxJS","exampleName":"forkJoin","example":{"name":"forkJoin","title":"forkJoin","pageTitle":"RxJS forkJoin operator example with a marble diagram","desc":"","docsUrl":"https://rxjs.dev/api/index/function/forkJoin","editUrl":"https://github.com/observable-playground/observable-playground/tree/master/src/examples/rxjs/forkJoin.md","content":"\n\nCreates Observable from multiple Observables.  \nResulting stream waits for all input streams to complete, then combines and emits their latest values\n\n```js\nconst { rxObserver } = require('api/v0.3');\nconst { timer, forkJoin } = require('rxjs');\nconst { mapTo, take } = require('rxjs/operators');\n\n\nconst a$ = timer(10).pipe(mapTo('a'));\nconst b$ = timer(0, 10).pipe(take(3));\n\nconst result$ = forkJoin(a$, b$);\n\na$.subscribe(rxObserver('a$'));\nb$.subscribe(rxObserver('b$'));\nresult$.subscribe(rxObserver('forkJoin(a$, b$)'));\n\n```\n"}},"path":"rxjs/forkJoin"}
