{"template":"../src/Example/Example.page.js","sharedHashesByProp":{},"data":{"libraryName":"RxJS","exampleName":"share","example":{"name":"share","title":"share","files":[{"name":"./examples/rxjs/multicasting/share/header.md","ext":".md","content":"# share"},{"name":"./examples/rxjs/multicasting/share/code.js","ext":".js","content":"const { rxObserver, palette } = require('api/v0.3');\nconst { timer, from } = require('rxjs');\nconst { zip, share, take } = require('rxjs/operators');\n\n\n// our source will be a basic timer\n// making 5 ticks, every 5ms\nconst source$ = timer(0, 5).pipe(\n  take(5),\n  zip(from(palette), Marble) // add color to items\n);\n\nconst shared$ = source$.pipe(\n  share()\n);\n\n\n// subscriptions and visualisations:\n// creating observers for source$\nconst a = rxObserver('source$');\nconst b = rxObserver('source$ — delayed subscription');\nsource$.subscribe(a);\n\n// creating observers for shared$\nconst c = rxObserver('shared$');\nconst d = rxObserver('shared$ — delayed subscription');\nshared$.subscribe(c);\n\n// delayed subscriptions\nsetTimeout(()=>{\n  source$.subscribe(b);\n  shared$.subscribe(d);\n}, 10);\n\n\n\n// helpers\nfunction Marble(value,color) {\n  return {\n    valueOf: ()=>value\n    , color\n  };\n}\n"}]}},"path":"rxjs/share"}
