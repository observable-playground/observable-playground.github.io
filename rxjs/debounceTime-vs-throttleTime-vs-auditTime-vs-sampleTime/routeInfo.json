{"template":"../src/Example/Example.page.js","sharedHashesByProp":{},"data":{"libraryName":"RxJS","exampleName":"debounceTime-vs-throttleTime-vs-auditTime-vs-sampleTime","example":{"name":"debounceTime-vs-throttleTime-vs-auditTime-vs-sampleTime","title":"debounceTime vs throttleTime vs auditTime vs sampleTime","pageTitle":"RxJS debounceTime vs throttleTime vs auditTime vs sampleTime compared","desc":"See this head-to-head comparison of debounceTime, throttleTime, auditTime and sampleTime operators with a marble diagram:","docsUrl":"","editUrl":"https://github.com/observable-playground/observable-playground/tree/master/src/examples/rxjs/debounceTime-vs-throttleTime-vs-auditTime-vs-sampleTime.md","content":"\n\n\n\n```js\nconst { rxObserver, palette } = require('api/v0.3');\nconst { merge, timer, from } = require('rxjs');\nconst { map, zip, auditTime, throttleTime, debounceTime, sampleTime } = require('rxjs/operators');\n\n// stream for coloring\nconst palette$ = from(palette);\n\nconst source$ = merge(\n    timer(0, 330),\n    timer(50, 180)\n  ).pipe(\n    // colorize each item\n    zip(palette$, Marble),\n    map(setCurrentTime)\n  );\n\nsource$\n  .subscribe(rxObserver());\n\nsource$.pipe(\n    debounceTime(100),\n    map(setCurrentTime)\n  )\n  .subscribe(rxObserver('debounceTime(100)'));\n\nsource$.pipe(\n    throttleTime(100),\n    map(setCurrentTime)\n  )\n  .subscribe(rxObserver('throttleTime(100)'));\n\nsource$.pipe(\n    auditTime(100),\n    map(setCurrentTime)\n  )\n  .subscribe(rxObserver('auditTime(100)'));\n\nsource$.pipe(\n    sampleTime(100),\n    map(setCurrentTime)\n  )\n  .subscribe(rxObserver('sampleTime(100)'));\n\n\n// helpers\n// keeps colors, updated value to Date.now\nfunction setCurrentTime({ color }){\n  return Marble(Date.now(), color);\n}\n\n// creates a colored Marble\nfunction Marble(value, color) {\n  return {\n    valueOf: ()=>value\n    , color\n  };\n}\n\n```\n"}},"path":"rxjs/debounceTime-vs-throttleTime-vs-auditTime-vs-sampleTime"}
