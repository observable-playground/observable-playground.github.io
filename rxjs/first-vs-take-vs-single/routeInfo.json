{"template":"/home/travis/build/observable-playground/observable-playground/src/Example/Example.page.js","sharedHashesByProp":{},"data":{"libraryName":"RxJS","exampleName":"first-vs-take-vs-single","example":{"name":"first-vs-take-vs-single","title":"first vs take vs single","pageTitle":"RxJS first vs take vs single operators head-to-head comparison with a marble diagram","desc":"See how these RxJS operators differ in emission, throwing errors and completion, when applied to different source Observables:","docsUrl":"","editUrl":"https://github.com/observable-playground/observable-playground/tree/master/src/examples/rxjs/first-vs-take-vs-single.md","content":"\n\nSee how these RxJS operators differ in emission, throwing errors and completion, when applied to different source Observables:\n\n```js\nconst { rxObserver } = require('api/v0.3');\nconst { timer, interval, merge } = require('rxjs');\nconst { first, single, take, ignoreElements } = require('rxjs/operators');\n\n\n// A stream — one value at 5ms, complete at 10ms\nconst a$ = merge(timer(5), timer(10).pipe(ignoreElements()));\n\na$.subscribe(rxObserver('A stream — one value at 5ms, complete at 10ms'));\n\na$.pipe(first())\n  .subscribe(rxObserver('A :: first()'));\n\na$.pipe(take(1))\n  .subscribe(rxObserver('A :: take(1)'));\n\na$.pipe(single())\n  .subscribe(rxObserver('A :: single()'));\n\n\n// B stream — two values at 5ms and 10ms, complete at 10ms\nconst b$ = interval(5).pipe(take(2));\n\nb$.subscribe(rxObserver('B stream — two values at 5ms and 10ms, complete at 10ms'));\n\nb$.pipe(first())\n  .subscribe(rxObserver('B :: first()'));\n\nb$.pipe(take(1))\n  .subscribe(rxObserver('B :: take(1)'));\n\nb$.pipe(single())\n  .subscribe(rxObserver('B :: single()'));\n\n\n// C stream — no values, complete at 10ms\nconst c$ = timer(10).pipe(ignoreElements());\n\nc$.subscribe(rxObserver('C stream — no values, complete at 10ms'));\n\nc$.pipe(first())\n  .subscribe(rxObserver('C :: first()'));\n\nc$.pipe(take(1))\n  .subscribe(rxObserver('C :: take(1)'));\n\nc$.pipe(single())\n  .subscribe(rxObserver('C :: single()'));\n```\n"}},"path":"rxjs/first-vs-take-vs-single"}
