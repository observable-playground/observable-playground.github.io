{"template":"__react_static_root__/src/Example/Example.page.js","sharedHashesByProp":{},"data":{"libraryName":"RxJS","exampleName":"windowWhen","example":{"name":"windowWhen","title":"windowWhen","pageTitle":"RxJS windowWhen operator example","desc":"windowWhen will emit a new substream of values from the source stream, every time the stream returned by provided function emits:","docsUrl":"https://rxjs.dev/api/operators/throttleTime","editUrl":"https://github.com/observable-playground/observable-playground/tree/master/src/examples/rxjs/windowWhen.md","content":"\n\nwindowWhen will emit a new substream of values from the source stream, every time the stream returned by provided function emits:\n\n```js\nconst { rxObserver } = require('api/v0.3');\nconst { timer } = require('rxjs');\nconst { take, windowWhen, mergeMap, count, toArray } = require('rxjs/operators');\n\ntimer(0, 4).pipe(\n    // take 10 values\n    take(10),\n  \n    // open a window every 10ms\n    windowWhen(() => timer(10)),\n  \n    // manage with the substream\n    // that emits events inside the window\n    mergeMap(substream =>\n      substream.pipe(toArray())\n    )\n  )\n  .subscribe(rxObserver());\n  ```"}},"path":"rxjs/windowWhen"}
