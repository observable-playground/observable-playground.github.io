{"template":"/home/travis/build/observable-playground/observable-playground/src/Example/Example.page.js","sharedHashesByProp":{},"data":{"libraryName":"RxJS","exampleName":"zip","example":{"name":"zip","title":"zip","pageTitle":"RxJS zip operator example + marble diagram","desc":"Creates Observable from multiple Observables. Resulting stream will emit a combined value when all input streams emit a new value","docsUrl":"https://rxjs.dev/api/index/function/zip","editUrl":"https://github.com/observable-playground/observable-playground/tree/master/src/examples/rxjs/zip.md","content":"\n\nCreates Observable from multiple Observables.  \nResulting stream will emit a combined value when all input streams emit a new value\n\n```js\nconst { rxObserver } = require('api/v0.3');\nconst { zip, timer, from } = require('rxjs');\nconst { take } = require('rxjs/operators');\n\n\nconst alphabet = 'abcdefghijklmnopqrstuvwxyz';\nconst alphabet$ = from(alphabet);\n\nzip(\n  timer(0, 5),\n  alphabet$,\n  (digit, letter)=>digit+letter // combinator\n)\n  .pipe(\n    take(10)\n  )\n  .subscribe(rxObserver());\n\n```"}},"path":"rxjs/zip"}
