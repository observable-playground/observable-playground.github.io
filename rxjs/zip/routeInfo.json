{"template":"../src/Example/Example.page.js","sharedHashesByProp":{},"data":{"libraryName":"RxJS","exampleName":"zip","example":{"name":"zip","title":"zip","files":[{"name":"./examples/rxjs/combination/zip.md","ext":".md","content":"# zip\n\nCreates Observable from multiple Observables.  \nNew Observable will emit a combined value when all passed Observables emit a new value.  \n[[docs]](https://rxjs.dev/api/index/function/zip)"},{"name":"./examples/rxjs/combination/zip.js","ext":".js","content":"const { rxObserver } = require('api/v0.3');\nconst { timer, from } = require('rxjs');\nconst { zip, take } = require('rxjs/operators');\n\n\nconst alphabet = 'abcdefghijklmnopqrstuvwxyz';\nconst alphabet$ = from(alphabet);\n\ntimer(0, 5).pipe(\n    zip(alphabet$, (digit, letter)=>digit+letter),\n    take(10)\n  )\n  .subscribe(rxObserver());"}]}},"path":"rxjs/zip"}
