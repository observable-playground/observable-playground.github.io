{"template":"/home/travis/build/observable-playground/observable-playground/src/Example/Example.page.js","sharedHashesByProp":{},"data":{"libraryName":"RxJS","exampleName":"catch","example":{"name":"catch","title":"catchError","pageTitle":"RxJS catchError operator example + marble diagram","desc":"catchError lets you substitute an error on a stream with another stream:","docsUrl":"https://rxjs.dev/api/operators/catchError","editUrl":"https://github.com/observable-playground/observable-playground/tree/master/src/examples/rxjs/catch.md","content":"\n\ncatchError lets you substitute an error on a stream with another stream\n\n```js\nconst { rxObserver } = require('api/v0.3');\nconst { timer, throwError, of } = require('rxjs');\nconst { switchMap, catchError } = require('rxjs/operators');\n\n// emit an error in 5ms\nconst error$ = timer(5).pipe(\n    switchMap(() => throwError('oh'))\n  );\n\n\nconst catch$ = error$.pipe(\n    catchError(err => of(err))\n  );\n\n\nerror$.subscribe(rxObserver());\ncatch$.subscribe(rxObserver());\n\n```\n\nCheck out [\"Error handling in RxJS\"](https://medium.com/@kddsky/error-handling-in-rxjs-bac0f96a7def) article to get better understanding how not to fail with Observables.\n"}},"path":"rxjs/catch"}
