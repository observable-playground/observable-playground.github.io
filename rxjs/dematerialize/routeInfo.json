{"template":"../src/Example/Example.page.js","sharedHashesByProp":{},"data":{"libraryName":"RxJS","exampleName":"dematerialize","example":{"name":"dematerialize","title":"dematerialize","files":[{"name":".js","ext":".js","content":"const { rxObserver } = require('api/v0.3');\nconst { timer, throwError, Notification } = require('rxjs');\nconst { switchMap, materialize, dematerialize, delay, map } = require('rxjs/operators');\n\n\nconst source$ = timer(5).pipe(\n  switchMap(() => throwError('Err!'))\n);\n\nconst result$ = source$.pipe(\n  // turn all events on stream into Notifications\n  materialize(),\n  // delay error by 5ms\n  delay(5),\n  // turn error into a value\n  map(n => new Notification('N', n.error, undefined)),\n  // turn Notifications back to events on stream\n  dematerialize()\n);\n\nsource$.subscribe(rxObserver('source$'));\nresult$.subscribe(rxObserver('result$'));\n"}]}},"path":"rxjs/dematerialize"}
