{"templateIndex":4,"sharedHashesByProp":{},"data":{"libraryName":"RxJS","exampleName":"retryWhen","exampleCode":"const {rxObserver} = require('api/v0.3');\nconst { timer } = require('rxjs');\nconst { map, tap, retryWhen, delayWhen } = require('rxjs/operators');\n\n\nconst source$ =\n  timer(0, 100).pipe(\n    map(val => {\n      if (val > 2) {\n        // error will be picked up by retryWhen\n        throw val;\n      }\n      return val;\n    }),\n    retryWhen(errors =>\n      // here Errors are transformed into Events\n      errors.pipe(\n        // show error messages thread\n        tap(rxObserver('ERROR MESSAGES')),\n        // will restart in 150 ms\n        delayWhen(val => timer(val * 50))\n      )\n    )\n);\n\nsource$.subscribe(rxObserver('source$'));\n// taken from\n// https://www.learnrxjs.io/operators/error_handling/retrywhen.html\n"},"path":"rxjs/retryWhen"}
