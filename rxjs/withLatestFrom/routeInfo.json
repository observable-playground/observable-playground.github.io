{"template":"__react_static_root__/src/Example/Example.page.js","sharedHashesByProp":{},"data":{"libraryName":"RxJS","exampleName":"withLatestFrom","example":{"name":"withLatestFrom","title":"withLatestFrom","pageTitle":"RxJS withLatestFrom operator example + marble diagram","desc":"","docsUrl":"https://rxjs.dev/api/operators/withLatestFrom","editUrl":"https://github.com/observable-playground/observable-playground/tree/master/src/examples/rxjs/withLatestFrom.md","content":"\n\nCreates a combined stream from source and other provided streams.    \nWhen source emits a value â€” resulting Observable will emit a combined value of source emission and all latest values on provided streams.\n\n```js\nconst { rxObserver } = require('api/v0.3');\nconst { timer } = require('rxjs');\nconst { withLatestFrom, take } = require('rxjs/operators');\n\n\nconst a$ = timer(0, 10).pipe(\n    take(5)\n  );\n\nconst b$ = timer(0, 4).pipe(\n    take(7)\n  );\n\nconst result$ = a$.pipe(\n  withLatestFrom(b$)\n);\n\na$.subscribe(rxObserver('a$'));\nb$.subscribe(rxObserver('b$'));\nresult$.subscribe(rxObserver('a$ :: withLatestFrom(b$)'));\n\n```\n"}},"path":"rxjs/withLatestFrom"}
