{"template":"__react_static_root__/src/Example/Example.page.js","sharedHashesByProp":{},"data":{"libraryName":"RxJS","exampleName":"combineLatest","example":{"name":"combineLatest","title":"combineLatest","pageTitle":"RxJS combineLatest operator example + marble diagram","desc":"Creates Observable from multiple Observables. Resulting stream will emit a combined value of all latest emissions of input streams","docsUrl":"https://rxjs.dev/api/index/function/combineLatest","editUrl":"https://github.com/observable-playground/observable-playground/tree/master/src/examples/rxjs/combineLatest.md","content":"\n\nCreates Observable from multiple Observables.  \nResulting stream will emit a combined value of all latest emissions of input streams\n\n```js\nconst { rxObserver } = require('api/v0.3');\nconst { timer, combineLatest } = require('rxjs');\nconst { take } = require('rxjs/operators');\n\n\nconst a$ = timer(0, 10).pipe(\n    take(5)\n  );\n\nconst b$ = timer(0, 4).pipe(\n    take(7)\n  );\n\nconst result$ = combineLatest(a$, b$);\n\na$.subscribe(rxObserver('a$'));\nb$.subscribe(rxObserver('b$'));\nresult$.subscribe(rxObserver('combineLatest(a$, b$)'));\n\n```\n"}},"path":"rxjs/combineLatest"}
