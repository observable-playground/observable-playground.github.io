!function(i){function e(e){for(var r,n,t=e[0],a=e[1],o=e[2],c=0,s=[];c<t.length;c++)n=t[c],u[n]&&s.push(u[n][0]),u[n]=0;for(r in a)Object.prototype.hasOwnProperty.call(a,r)&&(i[r]=a[r]);for(f&&f(e);s.length;)s.shift()();return b.push.apply(b,o||[]),l()}function l(){for(var e,r=0;r<b.length;r++){for(var n=b[r],t=!0,a=1;a<n.length;a++){var o=n[a];0!==u[o]&&(t=!1)}t&&(b.splice(r--,1),e=p(p.s=n[0]))}return e}var n={},u={3:0},b=[];function p(e){if(n[e])return n[e].exports;var r=n[e]={i:e,l:!1,exports:{}};return i[e].call(r.exports,r,r.exports,p),r.l=!0,r.exports}p.e=function(o){var e,r=[],n=u[o];if(0!==n)if(n)r.push(n[2]);else{var t=new Promise(function(e,r){n=u[o]=[e,r]});r.push(n[2]=t);var a,c=document.createElement("script");c.charset="utf-8",c.timeout=120,p.nc&&c.setAttribute("nonce",p.nc),c.src=p.p+"templates/"+({1:"src-Playground-PlaygroundContainer~src-pages-index",2:"vendors~src-Playground-PlaygroundContainer~src-pages-index",4:"src-Playground-PlaygroundContainer",5:"src-containers-Library",6:"src-pages-404",7:"src-pages-index"}[e=o]||e)+"."+{1:"7f285e32",2:"494332a9",4:"ef4f9dd0",5:"aaf90072",6:"06863f48",7:"e23a1986"}[e]+".js",a=function(e){c.onerror=c.onload=null,clearTimeout(s);var r=u[o];if(0!==r){if(r){var n=e&&("load"===e.type?"missing":e.type),t=e&&e.target&&e.target.src,a=new Error("Loading chunk "+o+" failed.\n("+n+": "+t+")");a.type=n,a.request=t,r[1](a)}u[o]=void 0}};var s=setTimeout(function(){a({type:"timeout",target:c})},12e4);c.onerror=c.onload=a,document.head.appendChild(c)}return Promise.all(r)},p.m=i,p.c=n,p.d=function(e,r,n){p.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:n})},p.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},p.t=function(r,e){if(1&e&&(r=p(r)),8&e)return r;if(4&e&&"object"==typeof r&&r&&r.__esModule)return r;var n=Object.create(null);if(p.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:r}),2&e&&"string"!=typeof r)for(var t in r)p.d(n,t,function(e){return r[e]}.bind(null,t));return n},p.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return p.d(r,"a",r),r},p.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},p.p="/",p.oe=function(e){throw console.error(e),e};var r=window.webpackJsonp=window.webpackJsonp||[],t=r.push.bind(r);r.push=e,r=r.slice();for(var a=0;a<r.length;a++)e(r[a]);var f=t;b.push([53,0,8]),l()}({114:function(e,r,n){"use strict";n.r(r);var o=n(0),c=n.n(o),t=n(29),a=n.n(t),s=n(27),i=n(24),l=(n(112),n(46)),u=n.n(l),b=n(47),p=n.n(b),f=n(48),m=n.n(f),v=n(23),d={rxjs:{name:"RxJS",version:v.a.rxjs,description:"Reactive Extensions For JavaScript",examples:{interval:"const { chart } = require('rp-api');\nconst { Observable } = require('rxjs/Rx');\n\nObservable\n  .interval(5)\n  .take(10)\n  .subscribe(chart.createObserver());\n",timer:p.a,from:u.a,of:"const { chart } = require('rp-api');\nconst { Observable } = require('rxjs/Rx');\n\nObservable\n  .of(1)\n  .subscribe(chart.createObserver());\n",constructor:"const { chart } = require('rp-api');\nconst { Observable } = require('rxjs/Rx');\n\nconst source$ = new Observable(observer=>{\n  let index = 0;\n  const id = setInterval(()=>{\n    observer.next(index++);\n  }, 10);\n  \n  return ()=>{\n    clearInterval(id);\n  };\n});\n\nsource$\n  .take(5)\n  .subscribe(chart.createObserver());\n",mergeMap:"const { chart } = require('rp-api');\nconst { palette } = require('rp-api/colors');\nconst { Observable } = require('rxjs/Rx');\n\n// helpers {{{\n// stream for coloring\nconst palette$ = Observable.from(palette);\n// fn to define color for item\nconst Mark = (value,color)=>({value,color});\n// like .from, but items are delayed by their value\nconst fromDelayed = arr =>\n  Observable\n    .from(arr)\n    .delayWhen(x=>Observable.timer(x));\n// }}}\n\nconst source$ = fromDelayed([ 5, 10, 20 ])\n  // get color for each item\n  .zip(palette$, Mark);\n\nconst switch$ = source$\n  .mergeMap(x=> Observable\n    .timer(0, 3)\n    .take(3)\n    // inherit color from the source$ stream\n    .map(y=>Mark(y, x.color)));\n\n\nsource$.subscribe(chart.createObserver());\nswitch$.subscribe(chart.createObserver());\n",switchMap:"const { chart } = require('rp-api');\nconst { palette } = require('rp-api/colors');\nconst { Observable } = require('rxjs/Rx');\n\n// helpers {{{\n// stream for coloring\nconst palette$ = Observable.from(palette);\n// fn to define color for item\nconst Mark = (value,color)=>({value,color});\n// like .from, but items are delayed by their value\nconst fromDelayed = arr =>\n  Observable\n    .from(arr)\n    .delayWhen(x=>Observable.timer(x));\n// }}}\n\nconst source$ = fromDelayed([ 5, 10, 20 ])\n  // get color for each item\n  .zip(palette$, Mark);\n\nconst switch$ = source$\n  .switchMap(x=> Observable\n    .timer(0, 3)\n    .take(5)\n    // inherit color from the source$ stream\n    .map(y=>Mark(y, x.color)));\n\n\nsource$.subscribe(chart.createObserver());\nswitch$.subscribe(chart.createObserver());\n",exhaustMap:"const { chart } = require('rp-api');\nconst { palette } = require('rp-api/colors');\nconst { Observable } = require('rxjs/Rx');\n\n// helpers {{{\n// stream for coloring\nconst palette$ = Observable.from(palette);\n// fn to define color for item\nconst Mark = (value,color)=>({value,color});\n// like .from, but items are delayed by their value\nconst fromDelayed = arr =>\n  Observable\n    .from(arr)\n    .delayWhen(x=>Observable.timer(x));\n// }}}\n\nconst source$ = fromDelayed([ 5, 10, 20 ])\n  // get color for each item\n  .zip(palette$, Mark);\n\nconst switch$ = source$\n  .exhaustMap(x=> Observable\n    .timer(0, 3)\n    .take(4)\n    // inherit color from the source$ stream\n    .map(y=>Mark(y, x.color)));\n\n\nsource$.subscribe(chart.createObserver());\nswitch$.subscribe(chart.createObserver());\n",delay:"const { chart } = require('rp-api');\nconst { Observable } = require('rxjs/Rx');\n\nObservable\n  .timer(0, 10)\n  .take(5)\n  .subscribe(chart.createObserver());\n\nObservable\n  .timer(0, 10)\n  .delay(15)\n  .take(5)\n  .subscribe(chart.createObserver());\n",pipe:"const { chart } = require('rp-api');\nconst { Observable } = require('rxjs/Rx');\nconst {\n    filter,\n    take\n} = require('rxjs/operators');\n\nObservable\n  .interval(5)\n  .pipe(\n    filter(x=>x%2),\n    take(5)\n  )\n  .subscribe(chart.createObserver());\n",catch:"const { chart } = require('rp-api');\nconst { Observable } = require('rxjs/Rx');\n\nconst error$ = new Observable(observer=>{\n  const t1 = setTimeout(()=>{\n    observer.error('oh');\n  }, 5);\n  \n  return ()=>clearTimeout(t1);\n});\n  \nconst catch$ = error$\n  .catch(err => Observable.of(err));\n\n\nerror$.subscribe(chart.createObserver());\ncatch$.subscribe(chart.createObserver());\n",retry:"const { chart } = require('rp-api');\nconst { palette } = require('rp-api/colors');\nconst { Observable } = require('rxjs/Rx');\n\nconst error$ = Observable.timer(0,5)\n  .map(x=>{\n    if (x>2) { throw 'Bam!' }\n    return x;\n  });\n\n// add color to items\nconst palette$ = Observable.from(palette);\nconst errorColorized$ = error$\n  .zip(palette$, (value,color)=>({value, color}));\n\n\nconst retry$ = errorColorized$.retry(2);\n\nerror$.subscribe(chart.createObserver());\nretry$.subscribe(chart.createObserver());\n",share:m.a,zip:"const { chart } = require('rp-api');\nconst { Observable } = require('rxjs/Rx');\n\nconst alphabet = 'abcdefghijklmnopqrstuvwxyz'\nconst alphabet$ = Observable.from(alphabet.split(''));\n\nObservable.timer(0, 5)\n    .zip(alphabet$, (digit, letter)=>digit+letter)\n    .take(10)\n    .subscribe(chart.createObserver());\n",concatMap:"const { chart } = require('rp-api');\nconst { palette } = require('rp-api/colors');\nconst { Observable } = require('rxjs/Rx');\n\n// helpers {{{\n// stream for coloring\nconst palette$ = Observable.from(palette);\n// fn to define color for item\nconst Mark = (value,color)=>({value,color});\n// like .from, but items are delayed by their value\nconst fromDelayed = arr =>\n  Observable\n    .from(arr)\n    .delayWhen(x=>Observable.timer(x));\n// }}}\n\nconst source$ = fromDelayed([ 5, 10, 20 ])\n  // get color for each item\n  .zip(palette$, Mark);\n\nconst switch$ = source$\n  .concatMap(x=> Observable\n    .interval(5)\n    .take(3)\n    // inherit color from the source$ stream\n    .map(y=>Mark(y, x.color)));\n\n\nsource$.subscribe(chart.createObserver());\nswitch$.subscribe(chart.createObserver());\n"},groups:[{name:"Creation",items:["interval","timer","from","of","constructor"]},{name:"Combination",items:["zip"]},{name:"Error handling",items:["catch","retry"]},{name:"Transformation",items:["mergeMap","switchMap","exhaustMap","concatMap"]},{name:"Multicasting",items:["share"]},{name:"Utility",items:["delay","pipe"]}]}},h=Object.keys(d).map(function(e){return{handle:e,library:d[e]}});function y(e){return(y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function O(e,r){for(var n=0;n<r.length;n++){var t=r[n];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function x(e,r){return!r||"object"!==y(r)&&"function"!=typeof r?function(e){if(void 0!==e)return e;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}(e):r}function g(e){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function $(e,r){return($=Object.setPrototypeOf||function(e,r){return e.__proto__=r,e})(e,r)}var k,_=function(e){function r(){return function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,r),x(this,g(r).apply(this,arguments))}var n,t,a;return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(r&&r.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),r&&$(e,r)}(r,o["Component"]),n=r,(t=[{key:"render",value:function(){return c.a.createElement("div",{className:"Menu"},c.a.createElement("ul",{className:"Menu__examples"},h.map(function(r){return c.a.createElement("li",{key:r.handle,className:"Menu__library"},c.a.createElement("ul",{className:"Menu__library-contents"},r.library.groups.map(function(e){return c.a.createElement("li",{key:e.name,className:"Menu__group"},c.a.createElement("span",{className:"Menu__group-name"},e.name),c.a.createElement("ul",{className:"Menu__group-contents"},e.items.map(function(e){return c.a.createElement("li",{key:e},c.a.createElement(i.a,{to:"/".concat(r.handle,"/").concat(e),className:"Menu__item",key:e},e))})))})),c.a.createElement("span",{className:"Menu__library-name"},r.library.name,c.a.createElement("span",{className:"Menu__library-version"},"v",r.library.version)))})))}}])&&O(n.prototype,t),a&&O(n,a),r}(),j=(n(113),function(){return c.a.createElement(s.Root,null,c.a.createElement("div",{className:"App"},c.a.createElement("div",{className:"App__header"},c.a.createElement(i.a,{to:"/",className:"App__logo"},c.a.createElement("span",{className:"App__logo_main"},"Observable")," Playground")),c.a.createElement("div",{className:"App__body"},c.a.createElement("div",{className:"App__contents"},c.a.createElement(s.Routes,null)),c.a.createElement("div",{className:"App__menu"},c.a.createElement(_,null))),c.a.createElement("div",{className:"App__footer"},"v",v.b)))});r.default=j;if("undefined"!=typeof document){var M=a.a.hydrate||a.a.render;k=j,M(c.a.createElement(k,null),document.getElementById("root"))}},23:function(e){e.exports={b:"0.2.0",a:{"@reach/router":"^1.2.1",brace:"^0.11.1",d3:"5.9.1","node-sass-chokidar":"^1.3.4","npm-run-all":"^4.1.5",react:"^16.8.1","react-ace":"^6.4.0","react-dom":"^16.8.1","react-hot-loader":"^4.3.12","react-static":"^6.0.18","reset-css":"^4.0.1",rxjs:"5.5.6"}}},30:function(e,r,n){"use strict";n.r(r);r.default=[{location:"/Users/kos/playground/react-static-test",plugins:[],hooks:{}}]},38:function(e,p,f){"use strict";f.r(p),function(e){var r=f(7),n=f.n(r),t=f(8),a=f.n(t),o=f(9),c=f.n(o);Object(o.setHasBabelPlugin)();var s={loading:function(){return null},error:function(e){return console.error(e.error),React.createElement("div",null,"An error occurred loading this page's template. More information is available in the console.")}},i=c()(a()({id:"../src/pages/404.js",load:function(){return Promise.all([f.e(6).then(f.bind(null,49))]).then(function(e){return e[0]})},path:function(){return n.a.join(e,"../src/pages/404.js")},resolve:function(){return 49},chunkName:function(){return"src-pages-404"}}),s),l=c()(a()({id:"../src/pages/index.js",load:function(){return Promise.all([Promise.all([f.e(0),f.e(2),f.e(1),f.e(7)]).then(f.bind(null,52))]).then(function(e){return e[0]})},path:function(){return n.a.join(e,"../src/pages/index.js")},resolve:function(){return 52},chunkName:function(){return"src-pages-index"}}),s),u=c()(a()({id:"../src/containers/Library",load:function(){return Promise.all([f.e(5).then(f.bind(null,50))]).then(function(e){return e[0]})},path:function(){return n.a.join(e,"../src/containers/Library")},resolve:function(){return 50},chunkName:function(){return"src-containers-Library"}}),s),b=c()(a()({id:"../src/Playground/PlaygroundContainer",load:function(){return Promise.all([Promise.all([f.e(0),f.e(2),f.e(1),f.e(4)]).then(f.bind(null,51))]).then(function(e){return e[0]})},path:function(){return n.a.join(e,"../src/Playground/PlaygroundContainer")},resolve:function(){return 51},chunkName:function(){return"src-Playground-PlaygroundContainer"}}),s);p.default=[i,l,u,b]}.call(this,"/")},46:function(e,r){e.exports="const { chart } = require('rp-api');\nconst { Observable } = require('rxjs/Rx');\n\nconst source$ = Observable\n  .from([ 5, 10, 20 ]);\n\nconst delayed$ = source$\n  .delayWhen(x=>Observable.timer(x));\n\n\nsource$.subscribe(chart.createObserver());\ndelayed$.subscribe(chart.createObserver());\n"},47:function(e,r){e.exports="const { chart } = require('rp-api');\nconst { Observable } = require('rxjs/Rx');\n\nObservable\n  .timer(10, 5)\n  .take(10)\n  .subscribe(chart.createObserver());\n\nObservable\n  .timer(20)\n  .subscribe(chart.createObserver());\n"},48:function(e,r){e.exports="const { chart } = require('rp-api');\nconst { palette } = require('rp-api/colors');\nconst { Observable } = require('rxjs/Rx');\n\nconst palette$ = Observable.from(palette);\n\nconst cold$ = Observable.timer(0, 5)\n  // add color to items\n  .zip(palette$, (value,color)=>({value, color}));\n\nconst hot$ =  cold$.share();\n\n// creating observers for cold$\nconst a = chart.createObserver();\nconst b = chart.createObserver();\ncold$.take(5).subscribe(a);\n\n// creating observers for hot$\nconst c = chart.createObserver();\nconst d = chart.createObserver();\nhot$.take(5).subscribe(c);\n\n// delayed subscriptions\nsetTimeout(()=>{\n  cold$.take(5).subscribe(b);\n  hot$.take(5).subscribe(d);\n}, 10);\n"},53:function(e,r,n){n(54),n(81),e.exports=n(89)},84:function(e,r,n){var t={".":16,"./":16,"./index":16,"./index.js":16};function a(e){var r=o(e);return n(r)}function o(e){var r=t[e];if(r+1)return r;var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}a.keys=function(){return Object.keys(t)},a.resolve=o,(e.exports=a).id=84}});
//# sourceMappingURL=main.7022bed1.js.map